      ****************************************************************
      * TITLE       : RESIZER
      * FUNCTION    : TO RESIZE FILES FROM HASH.AID.FILE INFO.
      * DATE        : 7/11/96
      * AUTHOR      : Ian Goulding
      * REV DETAILS : Should be run after RSZ001 + RSZ002 which
      * clears + updates hash.aid.file
      **ned   10859  sjh  10/09/02
      ***************************************************************
      *
      PROMPT ""
      HALF=@(-7)
      FULL=@(-8)
      BELL=CHAR(7)
      SYSMES=""
      TODAY=DATE()
      TOTAL.BYTES=0
      TOTAL.TIME=0
      CURR.AVG="10000"                   ; * set starting avg bytes per second
      *
      EQUATE DATA.BYTES TO HAFREC<2>
      EQUATE ITEMS TO HAFREC<1>
      DAYS='Mon':@AM:'Tue':@AM:'Wed':@AM:'Thu':@AM:'Fri':@AM:'Sat':@AM:'Sun'
      *
      TCL=@SENTENCE
      IF INDEX(TCL,'TEST',1) THEN TEST=1 ELSE TEST=0
*
      ONAME = "HASH.AID.FILE" ; GOSUB 99000 ; HAFFIL=INAME
      SYSMES=""
      ONAME = "HASH.AID.HIST" ; GOSUB 99000 ; HAHFIL=INAME
      ONAME = "UV.ACCOUNT" ; GOSUB 99000 ; UVAFIL=INAME
      OPEN 'PARAMETER' TO PARFL ELSE STOP 201,'PARAMETER'
*
      READ RSZPAR FROM PARFL,'RESIZE.PAR' ELSE
         RSZPAR=''
         RSZPAR<1>="79200":@VM:"79200":@VM:"79200":@VM:"79200":@VM:"79200":@VM:"54000"
         RSZPAR<2>="21600":@VM:"21600":@VM:"21600":@VM:"21600":@VM:"21600"
         WRITE RSZPAR ON PARFL,'RESIZE.PAR'
      END
      DOW=OCONV(DATE(),"DW")
      START.DOW=DOW
      CRT 'RESIZE.PAR'
      CRT '  DOW   Start   End'
      FOR Z=1 TO 7
         IF Z=DOW THEN TDFLAG='*' ELSE TDFLAG=' '
         CRT TDFLAG 'L#3':Z 'L#3':OCONV(RSZPAR<1,Z>,'MTS') 'L#9':OCONV(RSZPAR<2,Z>,'MTS') 'L#9'
      NEXT Z
      IF TEST THEN
         START.TM=TIME()
      END ELSE START.TM=RSZPAR<1,DOW>
      AVAIL.TM=0-START.TM
      END.DOW=DOW
      IF RSZPAR<2>#'' THEN
         LOOP
            IF RSZPAR<2,END.DOW>#'' THEN
               AVAIL.TM=AVAIL.TM+RSZPAR<2,END.DOW>
            END ELSE AVAIL.TM=AVAIL.TM+86400
         UNTIL RSZPAR<2,END.DOW>#'' DO
            END.DOW=END.DOW+1
            IF END.DOW>7 THEN END.DOW=1
         REPEAT
      END
      END.TM=RSZPAR<2,DOW>
!sjh      IF END.TM<START.TM THEN END.TM=86400
!!!      IF START.TM='' AND DOW<6 THEN START.TM=ICONV("22:00:00","MTS")
      CURR.TM=TIME()
      IF CURR.TM < START.TM THEN
         CRT 'Time is now: ':OCONV(TIME(),'MTS'):', Sleeping until: ':OCONV(START.TM,'MTS')
         IF NOT(TEST) THEN
            EXECUTE 'SLEEP ':OCONV(START.TM,'MTS')
         END
      END
      IF SYSMES NE "" THEN
         EXECUTE "CREATE-FILE HASH.AID.HIST 18 37 1"
         GOSUB 99000
         HAHFIL=INAME
      END
      * process each file held in HASH.AID.FILE
      IF NOT(SYSTEM(11)) THEN SELECT HAFFIL
      CRT 'Start: ':DAYS<START.DOW>:' ':OCONV(START.TM,'MTS'):', End: ':DAYS<END.DOW>:' ':OCONV(END.TM,'MTS')
      CRT 'Total available time = ':OCONV(AVAIL.TM,'MTS'):' (':AVAIL.TM:')'
      CRT
      EOL=0
      REQUIRED.TM=0
      ELAPSED.TM=0
      LOOP
         CURR.TM=TIME()
         READNEXT HAFKEY ELSE EOL=1
!!!      UNTIL EOL OR (CURR.TM>END.TM AND NOT(TEST)) DO
      UNTIL EOL OR ((AVAIL.TM-ELAPSED.TM)<1 AND NOT(TEST)) DO
         READ HAFREC FROM HAFFIL,HAFKEY THEN
            IF ITEMS GT 0 THEN
               ZD=OCONV(DATE(),"DW")
               CRT DAYS<ZD>:' ':OCONV(CURR.TM,"MTS"):" ":HAFKEY "L#30"
               GOSUB 100                 ; * work out new mod/sep
               OK=0
               GOSUB 400                 ; * check to see if enough time
               IF OK THEN
                  IF TEST THEN
                     CRT '   Test mode - no action taken'
                  END ELSE
                     EXECUTE "RESIZE ":FILENAME:" ":TYPE:" ":MOD:" ":SEP
                     GOSUB 300           ; * calculate times
                     GOSUB 200           ; * update HASH.AID.HIST
                     CRT
                  END
               END ELSE
                  CRT '   skipped - insufficient time'
               END
            END
         END
      REPEAT
**
      STOP
*
*-----------------subroutines----------------------*
*
100:* work out new modulo & separation
*
      NO.OF.STARS=DCOUNT(HAFKEY,"*")
      FILENAME=FIELD(HAFKEY,"*",NO.OF.STARS-3,1)
      OLD.TYPE=FIELD(HAFKEY,"*",NO.OF.STARS-2,1)
      OLD.MOD =FIELD(HAFKEY,"*",NO.OF.STARS-1,1)
      OLD.SEP =FIELD(HAFKEY,"*",NO.OF.STARS,1)
      TYPE=OLD.TYPE
      *
      AVG.SIZE=INT(DATA.BYTES/ITEMS)
      SEP=INT((AVG.SIZE+511)/512)
      MOD=INT(AVG.SIZE*ITEMS/(400*SEP)+1)
      * above value modified to 400 from 512 to allow growth ikg
      EXECUTE "PRIME ":MOD CAPTURING OUTPUT
      MOD=FIELD(OUTPUT,":",3,1)
      MOD=OCONV(MOD,"MCN")
      TOTAL.BYTES+=DATA.BYTES
      *
      CRT "   AV=":AVG.SIZE:" SEP=":SEP:
      CRT " MOD=":MOD:" SIZE=":DATA.BYTES:" ITEMS=":ITEMS
      RETURN
*
200:* update HASH.AID.HIST
*
      READ HAHREC FROM HAHFIL,FILENAME ELSE HAHREC=""
      HAHREC=INSERT(HAHREC,1,1;TYPE)
      HAHREC=INSERT(HAHREC,2,1;MOD)
      HAHREC=INSERT(HAHREC,3,1;SEP)
      HAHREC=INSERT(HAHREC,4,1;OLD.TYPE)
      HAHREC=INSERT(HAHREC,5,1;OLD.MOD)
      HAHREC=INSERT(HAHREC,6,1;OLD.SEP)
      HAHREC=INSERT(HAHREC,7,1;TODAY)
      HAHREC=INSERT(HAHREC,8,1;CURR.TM)
      HAHREC=INSERT(HAHREC,9,1;ACTUAL.ETM)
      HAHREC=INSERT(HAHREC,10,1;DATA.BYTES)
      HAHREC=INSERT(HAHREC,11,1;ITEMS)
      WRITE HAHREC ON HAHFIL,FILENAME
      RETURN
**
300:* display times
*
      ACTUAL.ETM=TIME()
      TIME.TAKEN=ACTUAL.ETM-CURR.TM
      IF TIME.TAKEN LT 0 THEN TIME.TAKEN=TIME.TAKEN*-1
      TOTAL.TIME+=TIME.TAKEN
      IF TOTAL.TIME<1 THEN TOTAL.TIME=1
      CURR.AVG=INT(TOTAL.BYTES/TOTAL.TIME)
      *
      DISPLAY.TIME= FILENAME:" processed in ":OCONV(TIME.TAKEN,"MTS"):", total time = ":OCONV(TOTAL.TIME,"MTS")
      DISPLAY.TIME2="   Current average = ":CURR.AVG:" bytes per second."
      CRT DISPLAY.TIME2
      CRT '   ':OCONV(ACTUAL.ETM,"MTS"):" ":DISPLAY.TIME
      CRT
      RETURN
      *
400:* check if enough time to process next file
      CURR.DOW=OCONV(DATE(),"DW")
      IF CURR.DOW<START.DOW THEN CURR.DOW=CURR.DOW+7
      ELAPSED.TM=((CURR.DOW-START.DOW)*86400)-START.TM+TIME()
      REQUIRED.TM=INT(DATA.BYTES/CURR.AVG)
      OK=0
      EST.ETM=INT(DATA.BYTES/CURR.AVG)+TIME()
      IF EST.ETM>86400 THEN
         EST.ETM=EST.ETM-86400
*        New day
         DOW=DOW+1
         IF DOW>7 THEN DOW=1
         END.TM=RSZPAR<2,DOW>
         IF END.TM='' THEN
            IF DOW=7 THEN NEXTDOW=1 ELSE NEXTDOW=DOW+1
            NEXT.ETM=RSZPAR<2,NEXTDOW>
            IF NEXT.ETM='' THEN NEXT.ETM=86400
            END.TM=86400+NEXT.ETM
         END
      END
!!!      IF EST.ETM < END.TM THEN OK=1 ELSE OK=0
!!!      CRT "   Estimated end = ":OCONV(EST.ETM,'MTS'):" (":EST.ETM:"), Cut Off = ":OCONV(END.TM,'MTS'):" (":END.TM:")"
      IF REQUIRED.TM < (AVAIL.TM-ELAPSED.TM) THEN OK=1 ELSE OK=0
      CRT "   Time required: ":REQUIRED.TM:", remaining: ":(AVAIL.TM-ELAPSED.TM)
      RETURN
*
*
99000:*---- FILE OPEN ROUTINE -----
      OPEN ONAME TO INAME ELSE
         INAME = ""
         SYSMES = "Cannot open ":ONAME:" FILE ":BELL
         GOSUB 99999
      END
      RETURN
      *
99999:***** SYSTEM MESSAGE ROUTINE *****
      *
      X=INT((76-LEN(SYSMES))/2)
      PRINT @(X,22):SYSMES:
      INPUT ANS,5
      PRINT @(0,22):@(-4)
      RETURN
   END
